<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:bind="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
            name="viewModel"
            type="com.cupcake.viewmodels.posts.PublicPostsViewModel" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".posts.PublicFragment">

        <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
            android:id="@+id/swipeRefreshLayoutPosts"
            android:layout_width="match_parent"
            android:layout_height="0dp"
            app:isRefresh="@{viewModel.state.isRefresh}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:onRefreshListener="@{() -> viewModel.onRefreshClicked()}">

            <androidx.recyclerview.widget.RecyclerView
                android:id="@+id/recyclerViewPosts"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:background="@color/background"
                app:showWhenIf="@{viewModel.state.isSuccess}"
                android:clipToPadding="false"
                android:orientation="vertical"
                android:paddingBottom="@dimen/spacing_medium"
                app:items="@{viewModel.state.postsResult}"
                app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
                tools:listitem="@layout/item_post" />
        </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>


        <include
            android:id="@+id/loading"
            layout="@layout/loading"
            android:visibility="invisible"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:showWhenIf="@{viewModel.state.loading}"
            bind:isLoading="@{viewModel.state.loading}" />

        <include
            android:id="@+id/error"
            layout="@layout/error"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            app:layout_constraintBottom_toTopOf="@+id/buttonTryAgain"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_chainStyle="packed"
            app:showWhenIf="@{viewModel.state.error != null}"
            bind:error="@{viewModel.state.error}" />

        <com.google.android.material.button.MaterialButton
            android:id="@+id/buttonTryAgain"
            style="@style/outlineButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginHorizontal="@dimen/spacing_medium"
            android:onClick="@{() -> viewModel.onRetryClicked()}"
            android:text="@string/retry"
            app:circularflow_defaultRadius="@dimen/spacing_large"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/error"
            app:showWhenIf="@{viewModel.state.error != null}" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>